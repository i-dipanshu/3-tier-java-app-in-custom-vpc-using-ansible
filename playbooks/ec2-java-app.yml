- name: Setup the java application stack 
  hosts: localhost
  connection: local
  gather_facts: false
  tasks:
    - name: Import vars
      include_vars:
        dir: ../vars
    
    - name: Creating key pair
      ec2_key:
        name: java-app-kp
        region: "{{region}}"
      register: java-app-kp-output

    - name: Save the key-pair
      copy: 
        content: "{{java-app-kp-output.key.private_key}}"
        dest: ../java-app-kp.pem
        mode: 0600
      when: java-app-kp-output.changed
    
    - name: Create a security group for load balancer
      ec2_group:
        name: elb_sg
        description: security group for elastic load balancer
        region: "{{region}}"
        vpc_id: "{{vpcId}}"
        rules: 
          - proto: tcp
            from_port: 80
            to_port: 80
            cidr_ip: 0.0.0.0/0
      register: elb_sg_output

    - name: Create security group for java application stack
      ec2_group: 
        name: java_app_sg
        description: security group for java application stack
        region: "{{region}}"
        vpc_id: "{{vpcId}}"
        purge_rules: no 
        rules: 
          - proto: tcp
            from_port: 80
            to_port: 80
            group_id: "{{elb_sg_output.group_id}}"

          - proto: tcp
            from_port: 22
            to_port: 22
            group_id: "{{bastion_sg_id}}"
      register: java_app_sg_output

    - name: Update the security group of java_app_sg with its own sg id
      ec2_group:
        name: java_app_sg
        region: "{{region}}"
        vpc_id: "{{vpcId}}"
        purge_rules: no 
        rules: 
          - proto: all
            group_id: "{{java_app_sg_output.group_id}}"
    
    - name: Create the instance for nginx web server in private subnet 
      ec2: 
        key_name: java-app-kp
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{nginx_ami}}"
        group_id: "{{java_app_sg_output.group_id}}"
        vpc_subnet_id: "{{private_sub_1}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "App"
          Project: "Java app Stack"
        exact_count: 1
        count_tag:
          Name: "nginx"
          Project: "Java app Stack"
      register: nginx_instance_output
    
    - name: Create the instance for tomcat web server in private subnet 
      ec2: 
        key_name: java-app-kp
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{tomcat_ami}}"
        group_id: "{{java_app_sg_output.group_id}}"
        vpc_subnet_id: "{{private_sub_1}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "tomcat"
          Project: "Java app Stack"
        exact_count: 1
        count_tag:
          Name: "tomcat"
          Project: "Java app Stack"
      register: tomcat_instance_output
    
    - name: Create the instance for memcache in private subnet 
      ec2: 
        key_name: java-app-kp
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{memcache_ami}}"
        group_id: "{{java_app_sg_output.group_id}}"
        vpc_subnet_id: "{{private_sub_1}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "memcache"
          Project: "Java app Stack"
        exact_count: 1
        count_tag:
          Name: "memcache"
          Project: "Java app Stack"
      register: memcache_instance_output

    - name: Create the instance for rabbit mq in private subnet 
      ec2: 
        key_name: java-app-kp
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{rmq_ami}}"
        group_id: "{{java_app_sg_output.group_id}}"
        vpc_subnet_id: "{{private_sub_1}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "rmq"
          Project: "Java app Stack"
        exact_count: 1
        count_tag:
          Name: "rmq"
          Project: "Java app Stack"
      register: rmq_instance_output  
    
    - name: Create the instance for mysql in private subnet 
      ec2: 
        key_name: java-app-kp
        region: "{{region}}"
        instance_type: t2.micro
        image: "{{mysql_ami}}"
        group_id: "{{java_app_sg_output.group_id}}"
        vpc_subnet_id: "{{private_sub_1}}"
        wait: yes
        wait_timeout: 300
        instance_tags: 
          Name: "mysql"
          Project: "Java app Stack"
        exact_count: 1
        count_tag:
          Name: "mysql"
          Project: "Java app Stack"
      register: mysql_instance_output
    
    


      
