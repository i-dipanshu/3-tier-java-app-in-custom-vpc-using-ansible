- hosts: localhost
  connection: local
  gather_facts: False
  tasks:
    - name: Import VPC Variables
      include_vars: ../vars/vpc_setup.yml
    
    - name: Create VPC for java application
      ec2_vpc_net:
        name: "{{vpc_name}}"
        cidr_block: "{{vpcCidr}}"
        dns_support: yes
        dns_hostnames: yes
        tenancy: default
        region: "{{region}}"
        state: "{{state}}"
      register: vpcOutput
    
    - name: Print the output
      debug:
        var: vpcOutput
    
    - name: Create the 1st public subnet
      ec2_vpc_subnet:
        vpc_id: "{{vpcOutput.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PubSub1Cidr}}"
        map_public: yes
        resource_tags:
          Name: java-app-public-subnet-1
      register: public_subnet_1_output

    - name: Create the 2st public subnet
      ec2_vpc_subnet:
        vpc_id: "{{vpcOutput.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PubSub2Cidr}}"
        map_public: yes
        resource_tags:
          Name: java-app-public-subnet-2
      register: public_subnet_2_output
    
    - name: Create the 3rd public subnet
      ec2_vpc_subnet:
        vpc_id: "{{vpcOutput.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PubSub3Cidr}}"
        map_public: yes
        resource_tags:
          Name: java-app-public-subnet-3
      register: public_subnet_3_output

    - name: Create the 1st private subnet
      ec2_vpc_subnet:
        vpc_id: "{{vpcOutput.vpc.id}}"
        region: "{{region}}"
        az: "{{zone1}}"
        state: "{{state}}"
        cidr: "{{PrivSub1Cidr}}"
        map_public: yes
        resource_tags:
          Name: java-app-private-subnet-1
      register: private_subnet_1_output

    - name: Create the 2nd private subnet
      ec2_vpc_subnet:
        vpc_id: "{{vpcOutput.vpc.id}}"
        region: "{{region}}"
        az: "{{zone2}}"
        state: "{{state}}"
        cidr: "{{PrivSub2Cidr}}"
        map_public: yes
        resource_tags:
          Name: java-app-private-subnet-2
      register: private_subnet_2_output

    - name: Create the 3rd private subnet
      ec2_vpc_subnet:
        vpc_id: "{{vpcOutput.vpc.id}}"
        region: "{{region}}"
        az: "{{zone3}}"
        state: "{{state}}"
        cidr: "{{PrivSub3Cidr}}"
        map_public: yes
        resource_tags:
          Name: java-app-private-subnet-3
      register: private_subnet_3_output  

    - name: Creating a internet gateway
      ec2_vpc_igw:
        vpc_id: "{{vpcOutput.vpc.id}}"
        region: "{{region}}"
        state: "{{state}}"
        tags:
          Name: java-app-igw
      register: igw_output

    - name: Creating a route table for public subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpcOutput.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: java-app-public-igw
        subnets:
          - "{{public_subnet_1_output.id}}"
          - "{{public_subnet_2_output.id}}"
          - "{{public_subnet_3_output.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{igw_output.gateway_id}}"
        register: public_route_table_output
    
    - name: Creating a NAT gateway and assigning a elastic IP to internet
      ec2_vpc_nat_gateway:
        state: "{{state}}"
        subnet_id: "{{public_subnet_1_output.subnet.id}}"
        wait: yes
        region: "{{region}}"
        if_exist_do_not_create: true
      register: nat_gateway_output

    - name: Creating a route table for private subnet
      ec2_vpc_route_table:
        vpc_id: "{{vpcOutput.vpc.id}}"
        region: "{{region}}"
        tags:
          Name: java-app-private-igw
        subnets:
          - "{{private_subnet_1_output.id}}"
          - "{{private_subnet_2_output.id}}"
          - "{{private_subnet_3_output.id}}"
        routes:
          - dest: 0.0.0.0/0
            gateway_id: "{{nat_gateway_output.nat_gateway_id}}"
        register: private_route_table_output

